exit
quit()
class Router:
	def _init_(self, model, version, ip_add):
		self.model = model
		self.version = version
		self.ip_add = ip_add
rtr1 = Router('iosv
class Router:
	def _init_(self, model, version, ip_add):
		self.model = model
		self.version = version
		self.ip_add = ip_add
rtr1 = Router('iosv', '13.4.1', '10.10.10.10')
a = 1
def devnet():
    print('man bruh')
devnet()
def devnet():
    print('bruh')
devnet()
class Router:
	def _init_(self, model, version, ip_add):
		self.model = model
		self.version = version
		self.ip_add = ip_add
rtr = Router('iosv', '13.4.1', '10.10.10.10')
quit()
a = [12, 17, 18, 420]
print(a)
for numbers in a
for numbers in a:
    print(number)
for numbers in a:
    print(numbers)
for numbers in a:
    print(numbers[1])
a = [12, 17, 18, 420]
count = 1
while (count < 5):
    print("bruh:", count)
    count++
a = [12, 17, 18, 420]
count = 1
while (count < 5):
    print("bruh:", count)
    count += 1
else:
    print("loop is done")
quit()
with open("story.txt", "r") as data:
    print(data.read())
quit()
with open("story.txt", "a+") as data:
    data.write('\nIts still working mane')
with open("story.txt", "r") as data:
    print(data.read())
quit()
type(json_dict)
import json
quit()
import json
quit()
import math
math.sqrt(9)
import json
import urllib.request as request
import json
with open ("json_sample.json") as data:
json_data = data.read()
    json_data = data.read()
print(json_data)
with open ("config.json") as data:
    json_data = data.read()
quit()
with open ("config.json") as data:
    json_data = data.read()
    print(json_data)
json_dict["interface"]["description"] = "Backup Link"
print(config.json)
with open ("config.json") as data:
    json_data = data.read()
json_dict = json.loads(json_data)
with open ("config.json") as data:
    bruh_data = data.read()
Bruh_dict = json.loads(bruh_data)
with open ("config.json") as data:
    bruh_data = data.read()
    bruh_dict = json.loads(bruh_data)
import json
pip install json
import yaml
quit()
import json
quit()
yaml_dict["interface"]["name"] = "GigabitEthernet1"
yaml_example.py
import yaml
with open("yaml_sample.yaml") as data:
    yaml_sample = data.read()
yaml_dict = yaml.load(yaml_sample, Loader=yaml.FullLoader)
    yaml_dict = yaml.load(yaml_sample, Loader=yaml.FullLoader)
yaml_dict = yaml.load(yaml_sample, Loader=yaml.FullLoader)
with open("yaml_sample.yaml") as data:
    yaml_sample = data.read()
yaml_dict = yaml.load(yaml_sample, Loader=yaml.FullLoader)
with open("yaml_sample.yaml") as data:
    yaml_sample = data.read()
bruh = yaml.load(yaml_sample, Loader=yaml.FullLoader)
quit()
import yaml
with open("yaml_sample.yaml") as data:
    yaml_sample = data.read()
bruh = yaml.load(yaml_sample, Loader=yaml.FullLoader)
quit()
import sys
sys.path
sys.path | more
sys.path
uit()
quit()
exit()
pip3 install requests
pip install requests
quit()
url = "https://postman-echo.com/get"
querystring = {"test":"123"}
headers = {}
response = requests.request("GET", url, headers=headers, params=querystring)
import requests
response = requests.request("GET", url, headers=headers, params=querystring)
print(response.text)
url
url = "https://postman-echo/post"
pyload = "hello Devnet"
headers = {'content-type': "text/plain"}
response = requests.request("POST", url, data= payload, headers=headers)
payload = "hello Devnet"
response = requests.request("POST", url, data= payload, headers=headers)
response = requests.request("POST", url, data=payload, headers=headers)
quit()
import requests as req
url = "https://postman-echo.com/get"
querystring = "test" : "123"
querystring = "test":"123"
querystring = {"test" : "123"}
headers = {}
response = req.request(GET, url, headers=headers, params=querystring)
response = req.request(get, url, headers=headers, params=querystring)
response = req.request("GET", url, headers=headers, params=querystring)
print(response)
print(response.content)
print(response.text)
import json
json_response = json(dumps.response)
json_response = json.dumps(response)
json_response = json.loadss(response)
json_response = json.loads(response)
type response
type <response>
type(response)
type(response.text)
json_response = json.loads(response.text)
json_response
json_response = json.dumps(response.text)
json_response
json_response = json.loads(response.text)
json_response
pprint(json_response)
print(json_response)
type(respomse.content
type(response.content)
quit()
test = works!
test = works
test = "works!"
print("does it {}".format(test))
quit()
u
url = ios-xe-mgmt.cisco.com
url = "ios-xe-mgmt.cisco.com"
import request
import requests

exit
user = root
user = "root"
password = "D_Vay!_10&"
interface_data = request.get(url, auth=HTTPBasicAuth(user, password))
interface_data = requests.get(url, auth=HTTPBasicAuth(user, password))
interface_data = requests.get(url, auth=(user, password))
url = "https://ios-xe-mgmt.cisco.com"
interface_data = requests.get(url, auth=(user, password))
interface_data = requests.get(url, auth=(user, password, verify=false))
interface_data = requests.get(url, auth=(user, password, verify = false))
interface_data = requests.get(url, auth=(user, password, verify=False))
interface_data = requests.get(url, auth=(user, password), verify=false)
interface_data = requests.get(url, auth=(user, password), verify=False)
requests.packages.urllib3.disable_warnings()
interface_data = requests.get(url, auth=(user, password), verify=False)
print('Interface data below\n {}'.format(interface_data))
interface_data
print(interface_data.text)
print(interface_data.content)
print(interface_data.response)
print('Interface data below\n {}'.format(interface_data.text))
quit()
